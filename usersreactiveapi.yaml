openapi: 3.0.0
info:
  title: Users Reactive API
  description: Reactive API for users.
  version: 1.0.0
servers:
  - url: 'https://api.usersreactiveapi.com'
tags:
  - name: Users
    description: Users

paths:
  /users:
    get:
      tags:
        - Users
      summary: Get a list of users
      operationId: getUsers
      responses:
        '200':
          description: Successfully returned a list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

    post:
      tags:
        - Users
      summary: Add a new user
      operationId: addUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInDto'
      responses:
        '201':
          description: Successfully created a new user
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '500':
          $ref: '#/components/responses/InternalServerError'

  /user/{id}:
    get:
      tags:
        - Users
      summary: Get a user by ID
      operationId: getUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Succesfully returned a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    put:
      tags:
        - Users
      summary: Update a user
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInDto'
      responses:
        '200':
          description: Succesfully updated a user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserOutDto'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

    delete:
      tags:
        - Users
      summary: Delete a user
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '204':
          description: Succesfully deleted a user
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalServerError'

components:
  schemas:
    UserInDto:
      type: object
      properties:
        username:
          type: string
          description: Username of the user.
      required:
        - username

    UserOutDto:
      type: object
      properties:
        id:
          type: string
        username:
          type: string
          description: Username of the user. This value is unique in the system.

    ErrorResponse:
      type: object
      properties:
        code:
          type: integer
          description: The HTTP status code applicable to this problem, expressed as an integer value.
        message:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem.

  responses:
    BadRequest:
      description: Bad request due to validation or illegal argument.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    NotFound:
      description: The requested resource was not found.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    InternalServerError:
      description: Internal server error, covering unhandled exceptions and storage issues.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
